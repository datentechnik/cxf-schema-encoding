<?xml version="1.0" encoding="UTF-8"?>	<!-- File: ElakTrans.xsd Version: 2.0 -->	<!-- 02.11.2010 Author: Mag. Stefan Fürlinger -->	<!-- (c) 2010 - Land OÖ --><xsd:schema xmlns="http://reference.e-government.gv.at/namespace/elaktrans/2#"	xmlns:xsd="http://www.w3.org/2001/XMLSchema"	xmlns:edi="http://reference.e-government.gv.at/namespace/ediakt/20050504#"	xmlns:baukasten="http://reference.e-government.gv.at/namespace/xml-baukasten/1#"	xmlns:eingang="http://reference.e-government.gv.at/namespace/antragsdaten/de/20040917#"	xmlns:p="http://reference.e-government.gv.at/namespace/persondata/20020228#"	xmlns:xmle="http://reference.e-government.gv.at/namespace/antragsdaten/de/20040917#"	targetNamespace="http://reference.e-government.gv.at/namespace/elaktrans/2#"	elementFormDefault="qualified" attributeFormDefault="unqualified"	version="1.0">	<xsd:import		namespace="http://reference.e-government.gv.at/namespace/ediakt/20050504#"		schemaLocation="ediakt.xsd" />	<xsd:import		namespace="http://reference.e-government.gv.at/namespace/antragsdaten/de/20040917#"		schemaLocation="xml-e-20060224.xsd" />	<!--		*****************************************************************************	-->	<!--		*** Elak > Application Communication ***	-->	<!--		*****************************************************************************	-->	<!-- insertApplication -->	<xsd:element name="insertApplicationInputObject">		<xsd:annotation>			<xsd:documentation>				Input-Objekt für den Service insertApplication			</xsd:documentation>		</xsd:annotation>		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonElakInputParameter" type="commonElakInputParameter" />				<xsd:element maxOccurs="1" minOccurs="0" name="purpose"					type="applicationElakPurpose" />				<xsd:element maxOccurs="1" minOccurs="1" name="ediakt"					type="edi:EdiaktType">					<xsd:annotation>						<xsd:documentation>							EDIAKT-Objekt, welches folgende Daten							beinhalten kann: Metadaten, Dokumente und Schlüssel;							für die							Schlüssel kännen (in Abh. der verwendeten Querbeziehungsvariante)							folgende EDIAKT-							Attribute verwendet werden:							edi.LayerX.MetaData.Identifier.TechnicalID bzw.							edi.LayerX.MetaData.ReferencedIdentifier.TechnicalID						</xsd:documentation>					</xsd:annotation>				</xsd:element>			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<xsd:element name="insertApplicationOutputObject">		<xsd:annotation>			<xsd:documentation>				Output-Objekt für den Service insertApplication			</xsd:documentation>		</xsd:annotation>		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonApplicationOutputParameter" type="commonApplicationOutputParameter" />				<xsd:element maxOccurs="1" minOccurs="1" name="layerUId"					type="insertLayerUId" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<!-- updateApplication -->	<xsd:element name="updateApplicationInputObject">		<xsd:annotation>			<xsd:documentation>				Input-Objekt für den Service updateApplication			</xsd:documentation>		</xsd:annotation>		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonElakInputParameter" type="commonElakInputParameter" />				<xsd:element maxOccurs="1" minOccurs="1" name="ediakt"					type="edi:EdiaktType">					<xsd:annotation>						<xsd:documentation>							EDIAKT-Objekt, welches folgende Daten							beinhalten kann: Metadaten, Dokumente und Schlüssel;							für die							Schlüssel kännen (in Abh. der verwendeten Querbeziehungsvariante)							folgende EDIAKT-							Attribute verwendet werden:							edi.LayerX.MetaData.Identifier.TechnicalID bzw.							edi.LayerX.MetaData.ReferencedIdentifier.TechnicalID						</xsd:documentation>					</xsd:annotation>				</xsd:element>			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<xsd:element name="updateApplicationOutputObject">		<xsd:annotation>			<xsd:documentation>				Output-Objekt für den Service updateApplication			</xsd:documentation>		</xsd:annotation>		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonApplicationOutputParameter" type="commonApplicationOutputParameter" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<!-- UpdateApplicationState -->	<xsd:element name="updateApplicationStateInputObject">		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonElakInputParameter" type="commonApplicationInputParameter" />				<xsd:element maxOccurs="1" minOccurs="1" name="layerUId"					type="layerUId" />				<xsd:element maxOccurs="1" minOccurs="1" name="state" type="updateState" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<xsd:element name="updateApplicationStateOutputObject">		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonApplicationOutputParameter" type="commonElakOutputParameter" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<!-- deleteApplication -->	<xsd:element name="deleteApplicationInputObject">		<xsd:annotation>			<xsd:documentation>				Input-Objekt für den Service deleteApplication			</xsd:documentation>		</xsd:annotation>		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonElakInputParameter" type="commonElakInputParameter" />				<xsd:element maxOccurs="1" minOccurs="1" name="layerUId"					type="layerUId" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<xsd:element name="deleteApplicationOutputObject">		<xsd:annotation>			<xsd:documentation>				Output-Objekt für den Service deleteApplication			</xsd:documentation>		</xsd:annotation>		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonApplicationOutputParameter" type="commonApplicationOutputParameter" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<!-- updateApplicationKeys -->	<xsd:element name="updateApplicationKeysInputObject">		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonElakInputParameter" type="commonApplicationInputParameter" />				<xsd:element maxOccurs="1" minOccurs="1" name="oldLayerUId"					type="layerUId" />				<xsd:element maxOccurs="1" minOccurs="1" name="newEdiakt"					type="edi:EdiaktType">					<xsd:annotation>						<xsd:documentation>							EDIAKT-Objekt, welches die selben Daten wie							"insertApplicationOutputObject" enthalten kann.						</xsd:documentation>					</xsd:annotation>				</xsd:element>				<xsd:element maxOccurs="1" minOccurs="1" name="reason"					type="updateKeyReason" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<xsd:element name="updateApplicationKeysOutputObject">		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonApplicationOutputParameter" type="commonApplicationOutputParameter" />				<xsd:element maxOccurs="1" minOccurs="0" name="layerUId"					type="insertLayerUId" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<!--		*****************************************************************************	-->	<!--		*** Application > Elak Communication ***	-->	<!--		*****************************************************************************	-->	<!-- InsertElak -->	<xsd:element name="insertELAKInputObject">		<xsd:annotation>			<xsd:documentation>				Input-Objekt für den Service insertELAK			</xsd:documentation>		</xsd:annotation>		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonApplicationInputParameter" type="commonApplicationInputParameter" />				<xsd:element maxOccurs="1" minOccurs="0" name="purpose"					type="applicationElakPurpose" />				<xsd:element maxOccurs="1" minOccurs="1" name="ediakt"					type="edi:EdiaktType">					<xsd:annotation>						<xsd:documentation>							EDIAKT-Objekt, welches folgende Daten							beinhalten kann: Metadaten, Dokumente und Schlüssel;							für die							Schlüssel kännen (in Abh. der verwendeten Querbeziehungsvariante)							folgende EDIAKT-							Attribute verwendet werden:							edi.LayerX.MetaData.Identifier.TechnicalID bzw.							edi.LayerX.MetaData.ReferencedIdentifier.TechnicalID						</xsd:documentation>					</xsd:annotation>				</xsd:element>			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<xsd:element name="insertELAKOutputObject">		<xsd:annotation>			<xsd:documentation>				Output-Objekt für den Service insertELAK			</xsd:documentation>		</xsd:annotation>		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonElakOutputParameter" type="commonElakOutputParameter" />				<xsd:element maxOccurs="1" minOccurs="1" name="layerUId"					type="insertLayerUId" />				<xsd:element maxOccurs="1" minOccurs="1" name="delivery">					<xsd:annotation>						<xsd:documentation>							Zustellungvariante						</xsd:documentation>					</xsd:annotation>					<xsd:simpleType>						<xsd:restriction base="xsd:string">							<xsd:enumeration value="APPLICATION">								<xsd:annotation>									<xsd:documentation>										Zustellung soll durch Fachinformationssystem										erfolgen; soll Dokument zuvor										(durch das jeweilige Land										signiert werden), so kann das signierte Dokumente										im Objekt										layerUId an die Fachapplikation retourniert werden;									</xsd:documentation>								</xsd:annotation>							</xsd:enumeration>							<xsd:enumeration value="ELAK">								<xsd:annotation>									<xsd:documentation>										Zustellung erfolgt(e) durch ELAK									</xsd:documentation>								</xsd:annotation>							</xsd:enumeration>							<xsd:enumeration value="NOT_REQUIRED">								<xsd:annotation>									<xsd:documentation>										Eine Zustellung ist (bspw. aufgrund des										Typs) nicht nötig									</xsd:documentation>								</xsd:annotation>							</xsd:enumeration>						</xsd:restriction>					</xsd:simpleType>				</xsd:element>			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<!-- UpdateElak -->	<xsd:element name="updateELAKInputObject">		<xsd:annotation>			<xsd:documentation>				Input-Objekt für den Service updateELAK			</xsd:documentation>		</xsd:annotation>		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonApplicationInputParameter" type="commonApplicationInputParameter" />				<xsd:element maxOccurs="1" minOccurs="1" name="ediakt"					type="edi:EdiaktType">					<xsd:annotation>						<xsd:documentation>							EDIAKT-Objekt, welches folgende Daten							beinhalten kann: Metadaten und Schlüssel;							für die Schlüssel kännen							(in Abh. der verwendeten Querbeziehungsvariante) folgende EDIAKT-							Attribute verwendet werden:							edi.LayerX.MetaData.Identifier.TechnicalID bzw.							edi.LayerX.MetaData.ReferencedIdentifier.TechnicalID						</xsd:documentation>					</xsd:annotation>				</xsd:element>			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<xsd:element name="updateELAKOutputObject">		<xsd:annotation>			<xsd:documentation>				Output-Objekt für den Service updateELAK			</xsd:documentation>		</xsd:annotation>		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonElakOutputParameter" type="commonElakOutputParameter" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<!-- UpdateElakState -->	<xsd:element name="updateELAKStateInputObject">		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonApplicationInputParameter" type="commonApplicationInputParameter" />				<xsd:element maxOccurs="1" minOccurs="1" name="layerUId"					type="layerUId" />				<xsd:element maxOccurs="1" minOccurs="1" name="state" type="updateState" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<xsd:element name="updateELAKStateOutputObject">		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonElakOutputParameter" type="commonElakOutputParameter" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<!-- deleteElak -->	<xsd:element name="deleteELAKInputObject">		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonApplicationInputParameter" type="commonApplicationInputParameter" />				<xsd:element maxOccurs="1" minOccurs="1" name="layerUId"					type="layerUId" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<xsd:element name="deleteELAKOutputObject">		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonElakOutputParameter" type="commonElakOutputParameter" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<!-- updateElakKeys -->	<xsd:element name="updateELAKKeysInputObject">		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonApplicationInputParameter" type="commonApplicationInputParameter" />				<xsd:element maxOccurs="1" minOccurs="1" name="oldLayerUId"					type="layerUId" />				<xsd:element maxOccurs="1" minOccurs="1" name="newEdiakt"					type="edi:EdiaktType">					<xsd:annotation>						<xsd:documentation>							EDIAKT-Objekt, welches die selben Daten wie							"insertELAKInputObject" enthalten kann.						</xsd:documentation>					</xsd:annotation>				</xsd:element>				<xsd:element maxOccurs="1" minOccurs="1" name="reason"					type="updateKeyReason" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<xsd:element name="updateELAKKeysOutputObject">		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonElakOutputParameter" type="commonElakOutputParameter" />				<xsd:element maxOccurs="1" minOccurs="0" name="layerUId"					type="insertLayerUId" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<!-- readElak -->	<xsd:element name="readELAKInputObject">		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonApplicationInputParameter" type="commonApplicationInputParameter" />				<xsd:element maxOccurs="1" minOccurs="1" name="layerUId"					type="layerUId" />				<xsd:element name="readElakDetails">					<xsd:complexType>						<xsd:sequence>							<xsd:element maxOccurs="unbounded" minOccurs="0"								name="elakLayerDetail" type="readElakLayerDetail" />							<xsd:element maxOccurs="1" minOccurs="0" name="getDocuments"								type="xsd:boolean" />						</xsd:sequence>					</xsd:complexType>				</xsd:element>			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<xsd:element name="readELAKOutputObject">		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1"					name="commonElakOutputParameter" type="commonElakOutputParameter" />				<xsd:element maxOccurs="1" minOccurs="0" name="ediakt"					type="edi:EdiaktType">					<xsd:annotation>						<xsd:documentation>							EDIAKT-Objekt: Die EDIAKT-Struktur wird							abhängig von den ausgewählten Daten entsprechend befüllt;						</xsd:documentation>					</xsd:annotation>				</xsd:element>				<xsd:element maxOccurs="unbounded" minOccurs="0" name="url">					<xsd:complexType>						<xsd:sequence>							<xsd:element maxOccurs="1" minOccurs="1" name="layerUId"								type="layerUId" />							<xsd:element maxOccurs="1" minOccurs="1" name="url"								type="xsd:anyURI" />						</xsd:sequence>					</xsd:complexType>				</xsd:element>			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<!--		*****************************************************************************	-->	<!--		*** Elak > Elak Communication ***	-->	<!--		*****************************************************************************	-->	<xsd:element name="sendELAKInputObject">		<xsd:annotation>			<xsd:documentation>				Input-Objekt für den Service sendELAK			</xsd:documentation>		</xsd:annotation>		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1" name="eingangsDaten">					<xsd:complexType>						<xsd:sequence>							<xsd:element maxOccurs="1" minOccurs="1"								name="commonElakInputParameter" type="commonElakInputParameter" />							<xsd:element maxOccurs="1" minOccurs="0" name="purpose"								type="elakElakPurpose" />							<xsd:element maxOccurs="1" minOccurs="1" name="ediakt"								type="edi:EdiaktType">								<xsd:annotation>									<xsd:documentation>										EDIAKT-Objekt, welches folgende Daten										beinhalten kann: Metadaten, Dokumente und Schlüssel;										für die										Schlüssel kännen (in Abh. der verwendeten										Querbeziehungsvariante) folgende EDIAKT-										Attribute verwendet										werden: edi.LayerX.MetaData.Identifier.TechnicalID bzw.										edi.LayerX.MetaData.ReferencedIdentifier.TechnicalID									</xsd:documentation>								</xsd:annotation>							</xsd:element>						</xsd:sequence>					</xsd:complexType>				</xsd:element>				<xsd:element maxOccurs="1" minOccurs="0" name="eingangsProtokoll"					type="xmle:EingangsProtokollTyp" />				<xsd:element maxOccurs="1" minOccurs="0"					name="verwaltungsInterneDaten" type="xmle:VerwaltungsInterneDatenTyp" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<xsd:element name="sendELAKOutputObject">		<xsd:annotation>			<xsd:documentation>				Output-Objekt für den Service sendELAK			</xsd:documentation>		</xsd:annotation>		<xsd:complexType>			<xsd:sequence>				<xsd:element maxOccurs="1" minOccurs="1" name="eingangsDaten">					<xsd:complexType>						<xsd:sequence>							<xsd:element maxOccurs="1" minOccurs="1"								name="commonElakOutputParameter" type="commonElakOutputParameter" />							<xsd:element maxOccurs="1" minOccurs="1" name="layerUId"								type="insertLayerUId" />						</xsd:sequence>					</xsd:complexType>				</xsd:element>				<xsd:element maxOccurs="1" minOccurs="0" name="eingangsProtokoll"					type="xmle:EingangsProtokollTyp" />				<xsd:element maxOccurs="1" minOccurs="0"					name="verwaltungsInterneDaten" type="xmle:VerwaltungsInterneDatenTyp" />			</xsd:sequence>		</xsd:complexType>	</xsd:element>	<!--		*****************************************************************************	-->	<!--		*** Common Parameter ***	-->	<!--		*****************************************************************************	-->	<xsd:complexType name="commonApplicationInputParameter">		<xsd:annotation>			<xsd:documentation>				Allgemeine Schnittstellenparameter für die				Kommunikation ausgehend vom ELAK (ELAK>ELAK und ELAK>FIS)			</xsd:documentation>		</xsd:annotation>		<xsd:sequence>			<xsd:element maxOccurs="1" minOccurs="1"				name="applicationSystemId" type="xsd:string">				<xsd:annotation>					<xsd:documentation>						Eindeutige Kurzbezeichnung des						Fachinformationssystems					</xsd:documentation>				</xsd:annotation>			</xsd:element>			<xsd:element maxOccurs="1" minOccurs="0" name="procedure"				type="xsd:string">				<xsd:annotation>					<xsd:documentation>						Leistungskürzel des Verfahrens laut						Verfahrenstabelle					</xsd:documentation>				</xsd:annotation>			</xsd:element>			<xsd:element maxOccurs="1" minOccurs="0" name="VKZType"				type="xsd:string">				<xsd:annotation>					<xsd:documentation>						Verwaltungskennzeichen					</xsd:documentation>				</xsd:annotation>			</xsd:element>		</xsd:sequence>	</xsd:complexType>	<xsd:complexType name="commonApplicationOutputParameter">		<xsd:annotation>			<xsd:documentation>				Allgemeine Schnittstellen-Responseparameter für				die Kommunikation Richtung FIS (ELAK>FIS)			</xsd:documentation>		</xsd:annotation>		<xsd:sequence>			<xsd:element name="activity">				<xsd:simpleType>					<xsd:restriction base="xsd:string">						<xsd:enumeration value="SAVED">							<xsd:annotation>								<xsd:documentation>									Die Daten wurden im Fachinformationssystem									gespeichert								</xsd:documentation>							</xsd:annotation>						</xsd:enumeration>						<xsd:enumeration value="IGNORED">							<xsd:annotation>								<xsd:documentation>									Der aufgerufene Service wurde vom									Fachinformationssystem akzeptiert und ignoriert								</xsd:documentation>							</xsd:annotation>						</xsd:enumeration>					</xsd:restriction>				</xsd:simpleType>			</xsd:element>		</xsd:sequence>	</xsd:complexType>	<xsd:complexType name="commonElakInputParameter">		<xsd:annotation>			<xsd:documentation>				Allgemeine Schnittstellenparameter für die				Kommunikation ausgehend vom FIS (FIS>ELAK)			</xsd:documentation>		</xsd:annotation>		<xsd:sequence>			<xsd:element maxOccurs="1" minOccurs="1" name="elakSystemId"				type="xsd:string">				<xsd:annotation>					<xsd:documentation>						Eindeutige Kurzbezeichnung des ELAK-Systems					</xsd:documentation>				</xsd:annotation>			</xsd:element>			<xsd:element maxOccurs="1" minOccurs="0" name="VKZType"				type="xsd:string">				<xsd:annotation>					<xsd:documentation>						Verwaltungskennzeichen					</xsd:documentation>				</xsd:annotation>			</xsd:element>		</xsd:sequence>	</xsd:complexType>	<xsd:complexType name="commonElakOutputParameter">		<xsd:annotation>			<xsd:documentation>				Allgemeine Schnittstellen-Responseparameter für				die Kommunikation Richtung ELAK (ELAK>ELAK und FIS>ELAK)			</xsd:documentation>		</xsd:annotation>		<xsd:sequence>			<xsd:element name="activity">				<xsd:simpleType>					<xsd:restriction base="xsd:string">						<xsd:enumeration value="JOURNALIZED">							<xsd:annotation>								<xsd:documentation>									Protokolliert								</xsd:documentation>							</xsd:annotation>						</xsd:enumeration>						<xsd:enumeration value="REGISTERED">							<xsd:annotation>								<xsd:documentation>									Registriert								</xsd:documentation>							</xsd:annotation>						</xsd:enumeration>						<xsd:enumeration value="READ">							<xsd:annotation>								<xsd:documentation>									Gelesen								</xsd:documentation>							</xsd:annotation>						</xsd:enumeration>					</xsd:restriction>				</xsd:simpleType>			</xsd:element>		</xsd:sequence>	</xsd:complexType>	<!--		*****************************************************************************	-->	<!--		*** LayerId's ***	-->	<!--		*****************************************************************************	-->	<!-- Layer3 = Akt -->	<xsd:complexType name="layer3UId">		<xsd:annotation>			<xsd:documentation>				Eindeutige ObjektId des FIS/ELAK-Layers 3			</xsd:documentation>		</xsd:annotation>		<xsd:sequence>			<xsd:element maxOccurs="1" minOccurs="1" name="layer3Id"				type="xsd:token" />		</xsd:sequence>	</xsd:complexType>	<!-- Layer2 = Geschäftsfall -->	<xsd:complexType name="layer2UId">		<xsd:annotation>			<xsd:documentation>				Eindeutige ObjektId des FIS/ELAK-Layers 2			</xsd:documentation>		</xsd:annotation>		<xsd:complexContent>			<xsd:extension base="layer3UId">				<xsd:sequence>					<xsd:element maxOccurs="1" minOccurs="1" name="layer2Id"						type="xsd:token" />				</xsd:sequence>			</xsd:extension>		</xsd:complexContent>	</xsd:complexType>	<!-- Layer1 = Geschäftsstück -->	<xsd:complexType name="layer1UId">		<xsd:annotation>			<xsd:documentation>				Eindeutige ObjektId des FIS/ELAK-Layers 1			</xsd:documentation>		</xsd:annotation>		<xsd:complexContent>			<xsd:extension base="layer2UId">				<xsd:sequence>					<xsd:element maxOccurs="1" minOccurs="1" name="layer1Id"						type="xsd:token" />				</xsd:sequence>			</xsd:extension>		</xsd:complexContent>	</xsd:complexType>	<!-- Layer0 = Dokument -->	<xsd:complexType name="layer0UId">		<xsd:annotation>			<xsd:documentation>				Eindeutige ObjektId des FIS/ELAK-Layers 0			</xsd:documentation>		</xsd:annotation>		<xsd:complexContent>			<xsd:extension base="layer1UId">				<xsd:sequence>					<xsd:element maxOccurs="1" minOccurs="1" name="layer0Id"						type="xsd:token" />				</xsd:sequence>			</xsd:extension>		</xsd:complexContent>	</xsd:complexType>	<!-- eindeutige ELAK/FIS-ObjektId -->	<xsd:complexType name="layerUId">		<xsd:annotation>			<xsd:documentation>				Eindeutige ObjektId (eines Layers)			</xsd:documentation>		</xsd:annotation>		<xsd:choice>			<xsd:element maxOccurs="1" minOccurs="1"				name="applicationLayer3UId" type="layer3UId" />			<xsd:element maxOccurs="1" minOccurs="1"				name="applicationLayer2UId" type="layer2UId" />			<xsd:element maxOccurs="1" minOccurs="1"				name="applicationLayer1UId" type="layer1UId" />			<xsd:element maxOccurs="1" minOccurs="1"				name="applicationLayer0UId" type="layer0UId" />			<xsd:element maxOccurs="1" minOccurs="1" name="elakLayer3UId"				type="layer3UId" />			<xsd:element maxOccurs="1" minOccurs="1" name="elakLayer2UId"				type="layer2UId" />			<xsd:element maxOccurs="1" minOccurs="1" name="elakLayer1UId"				type="layer1UId" />			<xsd:element maxOccurs="1" minOccurs="1" name="elakLayer0UId"				type="layer0UId" />		</xsd:choice>	</xsd:complexType>	<!-- eindeutige ObjektId mit Mehrfach-Dokumenten -->	<xsd:complexType name="insertLayerUId">		<xsd:annotation>			<xsd:documentation>				Eindeutige ObjektId (eines Layers) mit				Mehrfach-Dokumenten; referenced = Id des Zielsystems;				self = Id des				eigenen Systems;			</xsd:documentation>		</xsd:annotation>		<xsd:choice>			<xsd:element maxOccurs="1" minOccurs="1"				name="referencedLayer3UId" type="layer3UId" />			<xsd:element maxOccurs="1" minOccurs="1"				name="referencedLayer2UId" type="layer2UId" />			<xsd:element maxOccurs="1" minOccurs="1"				name="referencedLayer1UId" type="layer1UId" />			<xsd:element maxOccurs="unbounded" minOccurs="1" name="layer0UId">				<xsd:complexType>					<xsd:sequence>						<xsd:element maxOccurs="1" minOccurs="1"							name="referencedLayer1UId" type="layer1UId" />						<xsd:element maxOccurs="1" minOccurs="1" name="selfLayer0Id"							type="xsd:token" />						<xsd:element maxOccurs="1" minOccurs="1"							name="referencedLayer0Id" type="xsd:token" />						<xsd:element maxOccurs="1" minOccurs="0" name="layer0Payload"							type="edi:PayloadType">							<xsd:annotation>								<xsd:documentation>									Layer0Payload (Dokumente): Dokumente können									u.U. geändert werden - indem									bspw. eine Amtssignatur angebracht									wird;								</xsd:documentation>							</xsd:annotation>						</xsd:element>					</xsd:sequence>				</xsd:complexType>			</xsd:element>		</xsd:choice>	</xsd:complexType>	<!--		*****************************************************************************	-->	<!--		*** Other Data Types ***	-->	<!--		*****************************************************************************	-->	<xsd:simpleType name="layer">		<xsd:annotation>			<xsd:documentation>				Layer 3-0 eines EDIAKTES			</xsd:documentation>		</xsd:annotation>		<xsd:restriction base="xsd:string">			<xsd:enumeration value="LAYER3">				<xsd:annotation>					<xsd:documentation>						Layer 3: Akt					</xsd:documentation>				</xsd:annotation>			</xsd:enumeration>			<xsd:enumeration value="LAYER2">				<xsd:annotation>					<xsd:documentation>						Layer 3: Geschäftsfall					</xsd:documentation>				</xsd:annotation>			</xsd:enumeration>			<xsd:enumeration value="LAYER1">				<xsd:annotation>					<xsd:documentation>						Layer 3: Geschäftsstück					</xsd:documentation>				</xsd:annotation>			</xsd:enumeration>			<xsd:enumeration value="LAYER0">				<xsd:annotation>					<xsd:documentation>						Layer 3: Dokument					</xsd:documentation>				</xsd:annotation>			</xsd:enumeration>		</xsd:restriction>	</xsd:simpleType>	<xsd:simpleType name="applicationElakPurpose">		<xsd:restriction base="xsd:string">			<xsd:enumeration value="INPUT">				<xsd:annotation>					<xsd:documentation>						Eingang					</xsd:documentation>				</xsd:annotation>			</xsd:enumeration>			<xsd:enumeration value="OUTPUT">				<xsd:annotation>					<xsd:documentation>						Ausgang					</xsd:documentation>				</xsd:annotation>			</xsd:enumeration>			<xsd:enumeration value="INDEXING">				<xsd:annotation>					<xsd:documentation>						Indizierung					</xsd:documentation>				</xsd:annotation>			</xsd:enumeration>			<xsd:enumeration value="STATEMENT">				<xsd:annotation>					<xsd:documentation>						Stellungnahme					</xsd:documentation>				</xsd:annotation>			</xsd:enumeration>			<xsd:enumeration value="INFORMATION">				<xsd:annotation>					<xsd:documentation>						Information					</xsd:documentation>				</xsd:annotation>			</xsd:enumeration>		</xsd:restriction>	</xsd:simpleType>	<xsd:simpleType name="elakElakPurpose">		<xsd:restriction base="xsd:string">			<xsd:enumeration value="ASSIGNATION">				<xsd:annotation>					<xsd:documentation>						Abtretung					</xsd:documentation>				</xsd:annotation>			</xsd:enumeration>			<xsd:enumeration value="ARCHIVE">				<xsd:annotation>					<xsd:documentation>						Archiv					</xsd:documentation>				</xsd:annotation>			</xsd:enumeration>			<xsd:enumeration value="COURT">				<xsd:annotation>					<xsd:documentation>						Gericht					</xsd:documentation>				</xsd:annotation>			</xsd:enumeration>			<xsd:enumeration value="INSIGHT">				<xsd:annotation>					<xsd:documentation>						Einsicht					</xsd:documentation>				</xsd:annotation>			</xsd:enumeration>		</xsd:restriction>	</xsd:simpleType>	<xsd:complexType name="updateKeyReason">		<xsd:sequence>			<xsd:element maxOccurs="1" minOccurs="1" name="type">				<xsd:annotation>					<xsd:documentation>						Typ des Keyupdates					</xsd:documentation>				</xsd:annotation>				<xsd:simpleType>					<xsd:restriction base="xsd:string">						<xsd:enumeration value="REJOURNALIZE">							<xsd:annotation>								<xsd:documentation>									Umprotokollierung								</xsd:documentation>							</xsd:annotation>						</xsd:enumeration>						<xsd:enumeration value="REORGANISATION">							<xsd:annotation>								<xsd:documentation>									Umstrukturierung								</xsd:documentation>							</xsd:annotation>						</xsd:enumeration>					</xsd:restriction>				</xsd:simpleType>			</xsd:element>			<xsd:element maxOccurs="1" minOccurs="0" name="description"				type="xsd:string" />		</xsd:sequence>	</xsd:complexType>	<xsd:complexType name="updateState">		<xsd:sequence>			<xsd:element maxOccurs="1" minOccurs="1" name="state">				<xsd:simpleType>					<xsd:restriction base="xsd:string">						<xsd:enumeration value="FINALIZE">							<xsd:annotation>								<xsd:documentation>									Entfertigen									</xsd:documentation>							</xsd:annotation>						</xsd:enumeration>						<xsd:enumeration value="APPROVE">							<xsd:annotation>								<xsd:documentation>									Genehmigen									</xsd:documentation>							</xsd:annotation>						</xsd:enumeration>					</xsd:restriction>				</xsd:simpleType>			</xsd:element>		</xsd:sequence>	</xsd:complexType>	<xsd:complexType name="readElakDetail">		<xsd:annotation>			<xsd:documentation>				Definition "Was" in der Abfrage gesucht wird			</xsd:documentation>		</xsd:annotation>		<xsd:choice>			<xsd:element maxOccurs="1" minOccurs="1" name="version"				type="xsd:token">				<xsd:annotation>					<xsd:documentation>						Version der ELAK-Daten					</xsd:documentation>				</xsd:annotation>			</xsd:element>			<xsd:element maxOccurs="1" minOccurs="1" name="metadata"				type="xsd:boolean">				<xsd:annotation>					<xsd:documentation>						ELAK-Metadaten					</xsd:documentation>				</xsd:annotation>			</xsd:element>			<xsd:element maxOccurs="1" minOccurs="1" name="url"				type="xsd:boolean">				<xsd:annotation>					<xsd:documentation>						ELAK-Url					</xsd:documentation>				</xsd:annotation>			</xsd:element>		</xsd:choice>	</xsd:complexType>	<xsd:complexType name="readElakLayerDetail">		<xsd:annotation>			<xsd:documentation>				Definition des "Layers", auf dem die Suchabfrage				ausgeführt wird			</xsd:documentation>		</xsd:annotation>		<xsd:complexContent>			<xsd:extension base="readElakDetail">				<xsd:sequence>					<xsd:element maxOccurs="1" minOccurs="1" name="layer"						type="layer">						<xsd:annotation>							<xsd:documentation>								EDIAKT-Layer							</xsd:documentation>						</xsd:annotation>					</xsd:element>				</xsd:sequence>			</xsd:extension>		</xsd:complexContent>	</xsd:complexType></xsd:schema>